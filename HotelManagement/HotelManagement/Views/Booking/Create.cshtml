@model HotelManagement.Models.Booking

@{
    ViewData["Title"] = "Create";
}

<style>
    /* Further compressed form styling */
    .form-container {
        background-color: #f8f9fa;
        border-radius: 8px;
        padding: 10px;
        box-shadow: 0 0 5px rgba(0, 0, 0, 0.1);
        font-size: 0.85rem;
    }

    .form-group label {
        font-weight: 600;
        font-size: 0.8rem;
        margin-bottom: 3px;
    }

    .form-control {
        padding: 5px;
        font-size: 0.8rem;
    }

    .form-row {
        display: flex;
        flex-wrap: wrap;
        gap: 5px;
    }

    .form-group {
        flex: 1 1 calc(20% - 10px); /* 5 columns */
        min-width: 140px;
    }

    .custom-img {
        max-height: 60px;
        border: 1px solid #ccc;
    }

    .btn-primary {
        font-size: 0.8rem;
        padding: 5px 10px;
    }

    .section-title {
        font-size: 0.95rem;
        font-weight: 600;
        margin: 10px 0;
        text-align: center;
    }
</style>

<h4 class="text-center">Booking Form</h4>
<hr />
<form method="post" enctype="multipart/form-data" class="form-container">
    <input type="hidden" asp-for="Guests[0].Id" />
    <input type="hidden" asp-for="Guests[0].GovIdFilePath" />
    <input type="hidden" asp-for="UniqueId" />
    <input type="hidden" asp-for="CreatedDate" />
    <input type="hidden" asp-for="LastUpdatedDate" />
    <div asp-validation-summary="ModelOnly" class="text-danger"></div>
    <div class="form-row">

        <!-- Guest Information Section -->
        <div class="section-title col-12">Guest Information</div>
        <div class="form-group">
            <label asp-for="Guests[0].FirstName" class="control-label">First Name</label>
            <input asp-for="Guests[0].FirstName" placeholder="First Name" class="form-control" />
            <span asp-validation-for="Guests[0].FirstName" class="text-danger"></span>
        </div>
        <div class="form-group">
            <label asp-for="Guests[0].LastName" class="control-label">Last Name</label>
            <input asp-for="Guests[0].LastName" placeholder="Last Name" class="form-control" />
            <span asp-validation-for="Guests[0].LastName" class="text-danger"></span>
        </div>
        <div class="form-group">
            <label asp-for="Guests[0].Phone" class="control-label">Phone</label>
            <input asp-for="Guests[0].Phone" placeholder="Phone" class="form-control" />
            <span asp-validation-for="Guests[0].Phone" class="text-danger"></span>
        </div>
        <div class="form-group">
            <label asp-for="Guests[0].Email" class="control-label">Email</label>
            <input asp-for="Guests[0].Email" placeholder="Email" class="form-control" />
            <span asp-validation-for="Guests[0].Email" class="text-danger"></span>
        </div>
        <div class="form-group">
            <label asp-for="Guests[0].Address" class="control-label">Address</label>
            <input asp-for="Guests[0].Address" placeholder="Address" class="form-control" />
            <span asp-validation-for="Guests[0].Address" class="text-danger"></span>
        </div>

 
        <div class="form-group">
            <label asp-for="ActualCheckIn" class="control-label">Expected Check-In</label>
            <input asp-for="ActualCheckIn" class="form-control" placeholder="Expected Check-In" id="expectedCheckInDate" />
            <span asp-validation-for="ActualCheckIn" class="text-danger"></span>
        </div>
        <div class="form-group">
            <label asp-for="ActualCheckOut" class="control-label">Expected Check-Out</label>
            <input asp-for="ActualCheckOut" class="form-control" placeholder="Expected Check-Out" id="expectedCheckOutDate" />
            <span asp-validation-for="ActualCheckOut" class="text-danger"></span>
        </div>
        <div class="form-group">
            <label asp-for="RoomId" class="control-label">Room Type</label>
            <select asp-for="RoomId" class="form-control" asp-items="ViewBag.RoomId">
                <option value="">-- Select Room --</option>
            </select>
            <span asp-validation-for="RoomId" class="text-danger"></span>
        </div>

        <!-- Identification Details Section -->
        <div class="section-title col-12">Identification Details</div>
        <div class="form-group">
            <label asp-for="Guests[0].GovnId" class="control-label">Gov ID Type</label>
            <select asp-for="Guests[0].GovnId" class="form-control" asp-items="ViewBag.GorvnIdType">
                <option value="">-- Select ID --</option>
            </select>
            <span asp-validation-for="Guests[0].GorvnIdType" class="text-danger"></span>
        </div>
        <div class="form-group">
            <label asp-for="Guests[0].GovnIdNumber" class="control-label">Gov ID Number</label>
            <input asp-for="Guests[0].GovnIdNumber" placeholder="ID Number" class="form-control" />
            <span asp-validation-for="Guests[0].GovnIdNumber" class="text-danger"></span>
        </div>
        <div class="form-group">
            <label asp-for="Guests[0].GovIdFile" class="control-label">Upload ID</label>
            <input type="file" asp-for="Guests[0].GovIdFile" onchange="previewImage(event)" class="form-control" />
        </div>
        <div class="form-group">
            <img id="GuestDocpreview" class="img-fluid custom-img" src="@Model.Guests[0].GovIdFilePath" alt="ID Image" />
        </div>

        <!-- Submit Button -->
        <div class="col-12 text-center">
            <input class="btn btn-primary" type="submit" value="Save" />
        </div>
    </div>
</form>

@section Scripts {
    @{ await Html.RenderPartialAsync("_ValidationScriptsPartial"); }

    <script type="text/javascript">
        function previewImage(event) {
            var input = event.target;
            var reader = new FileReader();

            reader.onload = function () {
                var imagePreview = document.getElementById('GuestDocpreview');
                imagePreview.src = reader.result;
                imagePreview.style.display = 'block';
            };

            reader.readAsDataURL(input.files[0]);
        }

        document.addEventListener("DOMContentLoaded", function () {
            var checkInInput = document.getElementById('checkInDate');
            var checkOutInput = document.getElementById('checkOutDate');
            var expectedCheckInInput = document.getElementById('expectedCheckInDate');
            var expectedCheckOutInput = document.getElementById('expectedCheckOutDate');

            function setDefaultDates() {
                var now = new Date();
                var tomorrow = new Date(now);
                tomorrow.setDate(now.getDate() + 1);

                var nowFormatted = now.toISOString().slice(0, 16);
                var tomorrowFormatted = tomorrow.toISOString().slice(0, 16);

                checkInInput.value = nowFormatted;
                checkOutInput.value = tomorrowFormatted;
                expectedCheckInInput.value = nowFormatted;
                expectedCheckOutInput.value = tomorrowFormatted;
            }

            function updateCheckOutDate() {
                var checkInDate = new Date(checkInInput.value);
                var checkOutDate = new Date(checkInDate);
                checkOutDate.setDate(checkInDate.getDate() + 1);

                checkOutInput.value = checkOutDate.toISOString().slice(0, 16);
                expectedCheckOutInput.value = checkOutDate.toISOString().slice(0, 16);
            }

            function updateExpectedCheckOutDate() {
                var expectedCheckInDate = new Date(expectedCheckInInput.value);
                var expectedCheckOutDate = new Date(expectedCheckInDate);
                expectedCheckOutDate.setDate(expectedCheckInDate.getDate() + 1);

                expectedCheckOutInput.value = expectedCheckOutDate.toISOString().slice(0, 16);
            }

            function validateCheckOutDate() {
                var checkInDate = new Date(checkInInput.value);
                var checkOutDate = new Date(checkOutInput.value);

                // Prevent selecting a Check-Out date before Check-In date
                if (checkOutDate <= checkInDate) {
                    checkOutInput.setCustomValidity("Check-Out date must be after Check-In date.");
                } else {
                    checkOutInput.setCustomValidity("");
                }
            }

            function validateExpectedCheckOutDate() {
                var expectedCheckInDate = new Date(expectedCheckInInput.value);
                var expectedCheckOutDate = new Date(expectedCheckOutInput.value);

                // Prevent selecting an Expected Check-Out date before Expected Check-In date
                if (expectedCheckOutDate <= expectedCheckInDate) {
                    expectedCheckOutInput.setCustomValidity("Expected Check-Out date must be after Expected Check-In date.");
                } else {
                    expectedCheckOutInput.setCustomValidity("");
                }
            }

            checkInInput.addEventListener("change", function () {
                updateCheckOutDate();
                updateExpectedCheckOutDate();
                validateCheckOutDate(); // Validate after changing Check-In
            });

            checkOutInput.addEventListener("change", validateCheckOutDate);
            expectedCheckInInput.addEventListener("change", function () {
                updateExpectedCheckOutDate();
                validateExpectedCheckOutDate(); // Validate after changing Expected Check-In
            });

            expectedCheckOutInput.addEventListener("change", validateExpectedCheckOutDate);

            setDefaultDates();
        });
    </script>

}
